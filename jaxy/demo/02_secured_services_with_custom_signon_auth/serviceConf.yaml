
#################################
#################################
### JAXY FILE CONFIGURATION  ####
#################################
## Indentation is Important    ##
## Note : Don't use Tabulation ##
#################################


#######################################################
###### Mandatory Settings #############################
#######################################################

#########################################
#########################################
### DataBase ############################
#########################################

driverClassName : org.postgresql.Driver                # Database Driver
connectionUrl   : jdbc:postgresql://127.0.0.1/aviation # Database URL
userName        : jaxy_user                            # UserName 
password        : jaxy_password                        # Password

#########################################
#########################################
### SERVICES ############################
#########################################

Services :        # List of the Services
 - planes  :      # Service One ( Named planes )
     Query : >    # The SQL Query
             SELECT model , total_passengers , distance_km  
             FROM aircraft
     MaxThreads : 2
 - vip_planes :   # Service Two ( Named vip_planes )
     Query : >    # The SQL Query  
             SELECT * FROM aircraft
     MaxThreads : 2     
     
authentication :        # Enable Security 

  type : customSignOn   # Authentication mode = customSignOn  
  
  secured       :       # List The Services That will be secured
  
    vip_planes  :       # The VIP_PLANE Service 
      Accept    : [ Xml/Plain      , 
                    Xml/Encrypted  ,
                    Json/Plain     , 
                    Json/Encrypted ]  # MediaType ( Produced format )
      Ciphers   : [ AES_128_CBC  ,
                    AES_128_ECB  , 
                    AES_256_CBC  , 
                    AES_256_ECB  ]    # List of the Ciphers that can be used to encrypt data 
                    
  credentials   :  # The Table used for authentication 
    tableName          : users  # The table created by the script in the database aviation
    loginColumnName    : login  # The column Name 
    passwordColumnName : password -> MD5  # Here we say that column where passwords are stored is named password
                                          # And these passwords are stored in MD5 format in the database
  
  paramToSign :  # How HTTP Queries are signed 
    # Parametrs used in the signature are : 
    login     : PLAIN   # Function applied on the login is PLAIN_TEXT. # Ex : PLAIN ( "my_login" ) = my_login
    password  : MD5     # Function applied on the password is MD5 ( for this Demo )
                        # ( is Equal to the Hash used in passwordColumnName )
                        # Ex : MD5 ( "my_password" ) = A865A7E0DDBF35FA6F6A232E0893BEA4
    timeStamp : PLAIN   # Function applied on the timeStamp is PLAIN
                        #  Ex : PLAIN ( "123456789" ) = 123456789

  algoSign    : SHA2    # Signature = SHA2 ( PLAIN ( login ) + MD5 ( password ) + PLAIN( timeStamp ) ) 
                        
                        # Ex :
                        
                        #   login     = "my_login"     =>  PLAIN ( login )
                        #             = PLAIN ( "my_login") = my_login
                        #   password  = "my_password"  =>  MD5 ( password ) 
                        #             = MD5 ( "my_password" ) = A865A7E0DDBF35FA6F6A232E0893BEA4
                        #   timeStamp = 123456789  =>  PLAIN ( timeStamp )
                        #             = PLAIN ( "123456789") = 123456789
                        #   Sign      = SHA2 ( my_login A865A7E0DDBF35FA6F6A232E0893BEA4 123456789 )  =
                        #               94C9593395ABD56A32A67BC6CEEE437FB02B905836CA3058251D6108B4164481

  validRequestTimeout : 5 # Request Validity in seconds ( Default : 30 S )
 
 
